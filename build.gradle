import static java.util.regex.Pattern.compile

// querydsl 추가
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
    // springframework.boot version '2.7.0' --> '2.3.4' 로 변경
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'

    // querydsl 추가
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}


group = 'org.zerock'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // MariaDB JDBC, Thmeleaf 시간처리 관련 라이브러리
//    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client'
//    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time'


    // 타임리프
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.0'

    runtimeOnly 'com.h2database:h2'
    // test sql 확인용
    implementation('com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0')

    // querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"
}

test {
    useJUnitPlatform()
}

/*
    querydsl 설정들
 */
// querydsl 경로설정
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

// build시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}

// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
    complieOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl 끝